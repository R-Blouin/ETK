<controlsMetro:MetroWindow x:Class="Etk.Excel.UI.Windows.ViewsAndtemplates.TemplateManagementWindow"
                           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                           xmlns:controlsMetro="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                           xmlns:mahAppsConverters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
                           xmlns:dialogsMetro="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"

                           xmlns:sys="clr-namespace:System;assembly=mscorlib"
                           xmlns:etkDefinition="clr-namespace:Etk.BindingTemplates.Definitions;assembly=Etk"
                           xmlns:viewModel="clr-namespace:Etk.Excel.UI.Windows.ViewsAndtemplates.ViewModels"
                                                      
                           Title="Template Management" 

                           WindowTransitionsEnabled="True"
                           GlowBrush="{DynamicResource AccentColorBrush}"
                           WindowStartupLocation="CenterOwner"

                           ResizeMode="CanResizeWithGrip" 
                           Height="720"  MinHeight="400"
                           Width="800" MinWidth="200" 
                           ShowInTaskbar="False" 
>
    <Window.Resources>

        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BoolToVis"/>

            <!--<ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="templateOrientation">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="etkDefinition:Orientation" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="expanderMode">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="etkDefinition:ExpanderMode" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>-->

            <dialogsMetro:CustomDialog x:Key="BindingDefinitionsSelectionDlg"
                                     Title="Binding Definitions Selection"
                                     x:Name="BindingDefinitionsSelectionDlg">
                <!--<etkControls:BindingDefinitionSelection/>-->
            </dialogsMetro:CustomDialog>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Etk.Excel;component/UI/Resources/EtkMainStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <controlsMetro:MetroWindow.IconTemplate>
        <DataTemplate>
            <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Margin="4" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="HighQuality" Background="{DynamicResource BlackBrush}">
                <Grid.OpacityMask>
                    <VisualBrush Stretch="Uniform" Visual="{DynamicResource icon_ModelManagement}"/>
                </Grid.OpacityMask>
            </Grid>
        </DataTemplate>
    </controlsMetro:MetroWindow.IconTemplate>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="115"/>
        </Grid.ColumnDefinitions>

        <!-- Property selector -->
        <Grid Grid.Column="0" IsSharedSizeScope="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Tempmlate ident-->
            <Border Grid.Row="0" BorderThickness="2">
                <Grid Margin="3">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="Col1" Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Row="0" Grid.Column="0" Margin="0" VerticalAlignment="Center" ToolTip="Template Name">Name</Label>
                    <TextBox Grid.Row="0" Grid.Column="1" Margin="3,0,0,0" Text="{Binding Name}"/>
                    <Label Grid.Row="1" Grid.Column="0" Margin="0" VerticalAlignment="Center" ToolTip="Template Descritpion">Description</Label>
                    <TextBox Grid.Row="1" Grid.Column="1" Margin="3,0,0,0"  Text="{Binding Description}"/>

                    <Label Grid.Row="2" Grid.Column="0" Margin="0">Orientation</Label>
                    <!--<ComboBox Grid.Row="2" Grid.Column="1"  Margin="3,0,0,0" ItemsSource="{Binding Source={StaticResource templateOrientation}}" SelectedItem="{Binding Orientation}"/>-->
                </Grid>
            </Border>

            <!-- Binding type / accessor-->
            <GroupBox Grid.Row="1" Header="Type or Accessor" >
                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBox Grid.Row="0" Grid.Column="1" Margin="3,0,0,0" IsEnabled="{Binding CanSetAccessor}" Text="{Binding DataAccessorString}"/>
                    <!--<Label Grid.Row="1" Grid.Column="0" Margin="0" VerticalAlignment="Center" ToolTip="Type To Bind With">Description</Label>
                    <TextBox Grid.Row="1" Grid.Column="1" Margin="3,0,0,0" IsEnabled="{Binding CanSetBindingType}" Text="{Binding MainBindingDefinitionString}"/>-->
                </Grid>
            </GroupBox>
            
            <!-- Header as expander -->
            <GroupBox Grid.Row="2" Margin="3" Header="{Binding}" >
                <GroupBox.HeaderTemplate>
                    <DataTemplate>
                        <CheckBox IsChecked="{Binding HeaderAsExpander}" ToolTip="Use template header as an expander" Foreground="White">HEADER AS EXPANDER</CheckBox>
                    </DataTemplate>
                </GroupBox.HeaderTemplate>
                <Grid  VerticalAlignment="Center" Visibility="{Binding Path=HeaderAsExpander, Converter={StaticResource BoolToVis}}">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="Col1" Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Row="0" Grid.Column="0" Margin="3,0,3,0" VerticalAlignment="Center" ToolTip="Set the bound type property to use to manage the expander status">Property to bind with</Label>
                    <TextBox Grid.Row="0" Grid.Column="1" Margin="3,0,3,0" Text="{Binding ExpanderBindingDefinitionString}"/>

                    <Label Grid.Row="1" Grid.Column="0" Margin="3,0,3,0" VerticalAlignment="Center" ToolTip="Select the expander mode of action">Expander Mode</Label>
                    <!--<ComboBox Grid.Row="1" Grid.Column="1" Margin="3,0,3,0" IsEnabled="{Binding HeaderAsExpander}" ItemsSource="{Binding Source={StaticResource expanderMode}}" SelectedItem="{Binding ExpanderMode}"/>-->
                </Grid>
            </GroupBox>

            <!-- Binding Definitions -->
            <GroupBox Grid.Row="3" Margin="3">
                <GroupBox.HeaderTemplate>
                    <DataTemplate>
                        <Grid Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=GroupBox}, Path=ActualWidth }"> 
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="BINDING DEFINITIONS" Foreground="White" VerticalAlignment="Center"/>
                            <Button Grid.Column="1" Margin="15,0,15,0" Click="OnBindingDefinitionSelection">Change Selection</Button>
                        </Grid>
                    </DataTemplate>
                </GroupBox.HeaderTemplate>
                <Grid>
                    <DataGrid Margin="0,3,0,0" RenderOptions.ClearTypeHint="Enabled" TextOptions.TextFormattingMode="Display" GridLinesVisibility="Vertical"
                              SelectionUnit="Cell" ItemsSource="{Binding Path=SelectedProperties}" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True" CanUserSort="False"/>
                            <DataGridTextColumn Header="Description" Binding="{Binding ModelProperty.Description}" IsReadOnly="True" CanUserSort="False"/>
                            <DataGridTextColumn Header="Header" Binding="{Binding Header}" CanUserSort="False">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}" />
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </GroupBox>
        </Grid>

        <!-- Action panel -->
        <StackPanel Grid.Column="1" Margin="3,0,0,0" Background="WhiteSmoke" Orientation="Vertical">
            <TextBlock Margin="0,10,0,0" FontSize="18"  FontWeight="Light" Text="Actions" Foreground="{DynamicResource AccentColorBrush}" HorizontalAlignment="Center"/>
            <Separator Height="15" Background="{DynamicResource AccentColorBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Top"/>
            <Button FontSize="14" FontWeight="Medium" Margin="5,5,5,0" Content="Apply" Style="{DynamicResource AccentedSquareButtonStyle}" Command="{Binding ApplyCommand}" IsEnabled="{Binding IsOk}"/>
            <Button FontSize="14" FontWeight="Medium" Margin="5,5,5,0" Content="Cancel" Style="{DynamicResource AccentedSquareButtonStyle}"  />
            <Separator Height="15" Background="{DynamicResource AccentColorBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Top"/>
        </StackPanel>
    </Grid>
</controlsMetro:MetroWindow>